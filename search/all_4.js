var searchData=
[
  ['early_5fcontact_5fallowed_5ffraction',['early_contact_allowed_fraction',['../struct_q_p_locomotion_plan_settings.html#adddd6a27bf79e9bf7aa48a7e8e400c42',1,'QPLocomotionPlanSettings']]],
  ['effort_5flimit_5fmax',['effort_limit_max',['../class_rigid_body_actuator.html#aaf6482a596b63e57953391392a16a966',1,'RigidBodyActuator']]],
  ['effort_5flimit_5fmin',['effort_limit_min',['../class_rigid_body_actuator.html#a0d5f5d039382c956f9c477ade504f654',1,'RigidBodyActuator']]],
  ['eigen_5faligned_5funordered_5fmap',['eigen_aligned_unordered_map',['../drake_util_8h.html#ae1bc8e50fa781c9d7d78c0de6aee23d7',1,'drakeUtil.h']]],
  ['eigen_5fmake_5faligned_5foperator_5fnew',['EIGEN_MAKE_ALIGNED_OPERATOR_NEW',['../struct_support_state_element.html#a8d6f71748899df4440d6c90a019c47ef',1,'SupportStateElement::EIGEN_MAKE_ALIGNED_OPERATOR_NEW()'],['../struct_robot_joint_index_map.html#a8d6f71748899df4440d6c90a019c47ef',1,'RobotJointIndexMap::EIGEN_MAKE_ALIGNED_OPERATOR_NEW()']]],
  ['eigen_5fmatrix_5fcompare_2eh',['eigen_matrix_compare.h',['../eigen__matrix__compare_8h.html',1,'']]],
  ['eigen_5fmatrix_5fcompare_5ftest_2ecc',['eigen_matrix_compare_test.cc',['../eigen__matrix__compare__test_8cc.html',1,'']]],
  ['eigen_5ftypes_2eh',['eigen_types.h',['../eigen__types_8h.html',1,'']]],
  ['eigentocarrayofarrays',['eigenToCArrayOfArrays',['../drake_util_8h.html#ab66b03b84573e61f73e9c6f23101bbbc',1,'drakeUtil.h']]],
  ['eigentomatlab',['eigenToMatlab',['../drake_mex_util_8h.html#ae9c2703d688ea3fbec50f6a4a51d9aa1',1,'drakeMexUtil.h']]],
  ['eigentomatlabgeneral',['eigenToMatlabGeneral',['../drake_mex_util_8h.html#aa7e13409eccc48bb54d199cc036b4723',1,'eigenToMatlabGeneral(const Eigen::MatrixBase&lt; Eigen::Matrix&lt; Eigen::AutoDiffScalar&lt; DerType &gt;, RowsAtCompileTime, ColsAtCompileTime &gt;&gt; &amp;mat):&#160;drakeMexUtil.h'],['../drake_mex_util_8h.html#aa4c54919a85447a8c00b78e252e75b8a',1,'eigenToMatlabGeneral(const Eigen::MatrixBase&lt; Eigen::Matrix&lt; TrigPolyd, RowsAtCompileTime, ColsAtCompileTime &gt;&gt; &amp;mat):&#160;drakeMexUtil.h'],['../drake_mex_util_8h.html#acc6e2a8a86d6937ee3ad3657c9658623',1,'eigenToMatlabGeneral(const Eigen::MatrixBase&lt; Eigen::Matrix&lt; double, RowsAtCompileTime, ColsAtCompileTime &gt;&gt; &amp;mat):&#160;drakeMexUtil.h']]],
  ['eigentomatlabsparse',['eigenToMatlabSparse',['../drake_mex_util_8cpp.html#aab4c8df20ba9a8fef3ef48f2c2b29d87',1,'eigenToMatlabSparse(MatrixBase&lt; Derived &gt; const &amp;M, int &amp;num_non_zero):&#160;drakeMexUtil.cpp'],['../drake_mex_util_8cpp.html#a7dfeb935f560b527cf8762e0c129aebd',1,'eigenToMatlabSparse(MatrixBase&lt; MatrixXd &gt; const &amp;, int &amp;):&#160;drakeMexUtil.cpp'],['../drake_mex_util_8cpp.html#aa257a422b966a4b9045f3f7a6327b419',1,'eigenToMatlabSparse(MatrixBase&lt; Map&lt; MatrixXd &gt;&gt; const &amp;, int &amp;):&#160;drakeMexUtil.cpp'],['../drake_mex_util_8h.html#a80dcf2fd87f4abd4f743a1a624ffc6bf',1,'eigenToMatlabSparse(Eigen::MatrixBase&lt; Derived &gt; const &amp;M, int &amp;num_non_zero):&#160;drakeMexUtil.h']]],
  ['eigentomsspoly',['eigenToMSSPoly',['../drake_mex_util_8h.html#a66babcd1ce21bd67b3883f504f376555',1,'drakeMexUtil.h']]],
  ['eigentopoints',['eigenToPoints',['../convex_hull_8cpp.html#aec1fc44348964553cba3f5fc2e67a130',1,'convexHull.cpp']]],
  ['eigentostdvectorofstdvectors',['eigenToStdVectorOfStdVectors',['../drake_util_8h.html#a66e803c21237fd55f0e3fae3976f760c',1,'drakeUtil.h']]],
  ['eigentotaylorvar',['eigenToTaylorVar',['../drake_mex_util_8h.html#a36fba6f55f547ceecf0a19b82bb1a376',1,'drakeMexUtil.h']]],
  ['eigentotrigpoly',['eigenToTrigPoly',['../drake_mex_util_8h.html#a76ba02ded77136d57c853b5993f7cb63',1,'drakeMexUtil.h']]],
  ['eigentype',['EigenType',['../classdrake_1_1_n_ary_state.html#aa801f0f9a2d26bfa7ea387b8b4474459',1,'drake::NAryState']]],
  ['eigenvector',['EigenVector',['../struct_drake_1_1_eigen_vector.html',1,'Drake']]],
  ['eigenvectortocarray',['eigenVectorToCArray',['../drake_util_8h.html#a5b0523371673fa323ff1411c13a0b9da',1,'drakeUtil.h']]],
  ['eigenvectortostdvector',['eigenVectorToStdVector',['../drake_util_8h.html#a446641c6fd4dd7ec952d8d484cf582a2',1,'drakeUtil.h']]],
  ['element',['Element',['../class_drake_collision_1_1_element.html',1,'DrakeCollision']]],
  ['element',['Element',['../class_drake_shapes_1_1_element.html',1,'DrakeShapes']]],
  ['element',['Element',['../class_drake_collision_1_1_element.html#a82f6e1ddea08d4963e955607b262d4e2',1,'DrakeCollision::Element::Element(const Eigen::Isometry3d &amp;T_element_to_local=Eigen::Isometry3d::Identity())'],['../class_drake_collision_1_1_element.html#a9ef4afb6c401a3f1b812c7d21bc857b3',1,'DrakeCollision::Element::Element(const DrakeShapes::Geometry &amp;geometry, const Eigen::Isometry3d &amp;T_element_to_local=Eigen::Isometry3d::Identity())'],['../class_drake_collision_1_1_element.html#a6868d3793e19450f206adbc86a273d37',1,'DrakeCollision::Element::Element(const Element &amp;other)'],['../class_drake_shapes_1_1_element.html#ab0f5f3cdffafbf411c257507010682a8',1,'DrakeShapes::Element::Element(const Geometry &amp;geometry, const Eigen::Isometry3d &amp;T_element_to_local)'],['../class_drake_shapes_1_1_element.html#a032dd3870c502765e29e20225a7c543e',1,'DrakeShapes::Element::Element(const Geometry &amp;geometry)'],['../class_drake_shapes_1_1_element.html#aa302678227a8b1cb2bf6c730e490fbd3',1,'DrakeShapes::Element::Element(const Eigen::Isometry3d &amp;T_element_to_local)'],['../class_drake_shapes_1_1_element.html#a70bf0196dba1539ad1b53d110476ec27',1,'DrakeShapes::Element::Element(const Element &amp;)']]],
  ['element_2ecpp',['Element.cpp',['../collision_2_element_8cpp.html',1,'']]],
  ['element_2ecpp',['Element.cpp',['../shapes_2_element_8cpp.html',1,'']]],
  ['element_2eh',['Element.h',['../collision_2_element_8h.html',1,'']]],
  ['element_2eh',['Element.h',['../shapes_2_element_8h.html',1,'']]],
  ['elementa',['elementA',['../struct_drake_collision_1_1_point_pair.html#a9649e66cf2a5e69902c41ece5f8b9312',1,'DrakeCollision::PointPair']]],
  ['elementb',['elementB',['../struct_drake_collision_1_1_point_pair.html#ab7202648a434214c284fef61a6085ae3',1,'DrakeCollision::PointPair']]],
  ['elementid',['ElementId',['../namespace_drake_collision.html#abedcf22a55257b04e6b7a12700ae4c22',1,'DrakeCollision']]],
  ['elementidpair',['ElementIdPair',['../namespace_drake_collision.html#addbd6a728eaa01f6de25656dfea0e6c2',1,'DrakeCollision']]],
  ['elements',['elements',['../class_drake_collision_1_1_model.html#a5f89be6ecb6014f602b4c928373fe1fa',1,'DrakeCollision::Model']]],
  ['elementtobtobjmap',['ElementToBtObjMap',['../namespace_drake_collision.html#ae340e12aeb561a3b614a8e5a4301f69a',1,'DrakeCollision']]],
  ['empty',['empty',['../classdrake_1_1_functional_form_1_1_variables.html#ac6e61de369e994009e36f344f99c15ad',1,'drake::FunctionalForm::Variables::empty()'],['../classdrake_1_1systems_1_1_vector_object.html#ab863df8ed6316860117a6bf26e131bbd',1,'drake::systems::VectorObject::empty()']]],
  ['enabled',['enabled',['../struct_joint_soft_limit_params.html#a4321d41c139ef55a161ac00c03a54282',1,'JointSoftLimitParams']]],
  ['encode',['encode',['../namespace_drake.html#a1d567c806cb27fb764c339a0e8c75ad7',1,'Drake']]],
  ['encodepiecewisepolynomial',['encodePiecewisePolynomial',['../lcm_util_8cpp.html#a26aff493184abc82f9a2a284789cab63',1,'encodePiecewisePolynomial(const PiecewisePolynomial&lt; double &gt; &amp;piecewise_polynomial, drake::lcmt_piecewise_polynomial &amp;msg):&#160;lcmUtil.cpp'],['../lcm_util_8h.html#a5e31e8d3f170d876e619701e63390aa1',1,'encodePiecewisePolynomial(const PiecewisePolynomial&lt; double &gt; &amp;piecewise_polynomial, drake::lcmt_piecewise_polynomial &amp;msg):&#160;lcmUtil.cpp']]],
  ['encodepolynomial',['encodePolynomial',['../lcm_util_8cpp.html#a54f6689cd3ad77da0fc4e709a5e4edb7',1,'encodePolynomial(const Polynomial&lt; double &gt; &amp;polynomial, drake::lcmt_polynomial &amp;msg):&#160;lcmUtil.cpp'],['../lcm_util_8h.html#a6c5bd20871cac6eff88bf89a28f8d20e',1,'encodePolynomial(const Polynomial&lt; double &gt; &amp;polynomial, drake::lcmt_polynomial &amp;msg):&#160;lcmUtil.cpp']]],
  ['encodepolynomialmatrix',['encodePolynomialMatrix',['../lcm_util_8h.html#a4156c1e85d8efbd69ce63a77fdd28df7',1,'lcmUtil.h']]],
  ['end',['end',['../classdrake_1_1_functional_form_1_1_variables.html#a40466c58502f32111672e95ddd331bea',1,'drake::FunctionalForm::Variables']]],
  ['entry',['entry',['../structdrake_1_1systems_1_1_input_entry_finder.html#a9bc366188fb4bc89997d13df882652ad',1,'drake::systems::InputEntryFinder::entry()'],['../structdrake_1_1systems_1_1_output_entry_finder.html#a9bc366188fb4bc89997d13df882652ad',1,'drake::systems::OutputEntryFinder::entry()']]],
  ['epasolver',['epaSolver',['../is_collision_free__mex_8cpp.html#a04333245a37b1c2ef6b12d0e7c0cab8c',1,'epaSolver():&#160;isCollisionFree_mex.cpp'],['../pt_to_poly_bullet__mex_8cpp.html#a04333245a37b1c2ef6b12d0e7c0cab8c',1,'epaSolver():&#160;ptToPolyBullet_mex.cpp'],['../replan_funnels__mex_8cpp.html#a04333245a37b1c2ef6b12d0e7c0cab8c',1,'epaSolver():&#160;replanFunnels_mex.cpp'],['../shift_funnel__snopt__mex_8cpp.html#a04333245a37b1c2ef6b12d0e7c0cab8c',1,'epaSolver():&#160;shiftFunnel_snopt_mex.cpp']]],
  ['epsilon',['EPSILON',['../control_util_8h.html#a002b2f4894492820fe708b1b7e7c5e70',1,'EPSILON():&#160;controlUtil.h'],['../_rigid_body_tree_8h.html#a002b2f4894492820fe708b1b7e7c5e70',1,'EPSILON():&#160;RigidBodyTree.h']]],
  ['equality_5fconstrained_5fqp_5fsolver_2ecc',['equality_constrained_qp_solver.cc',['../equality__constrained__qp__solver_8cc.html',1,'']]],
  ['equality_5fconstrained_5fqp_5fsolver_2eh',['equality_constrained_qp_solver.h',['../equality__constrained__qp__solver_8h.html',1,'']]],
  ['equalityconstrainedqpsolver',['EqualityConstrainedQPSolver',['../classdrake_1_1solvers_1_1_equality_constrained_q_p_solver.html',1,'drake::solvers']]],
  ['estimateparameters',['EstimateParameters',['../classdrake_1_1solvers_1_1_system_identification.html#a96a5bfd1bf4d5b1ab88016652319d761',1,'drake::solvers::SystemIdentification']]],
  ['eta',['eta',['../struct_v_ref_integrator_params.html#ae4f402913d5fc5dd3aebca242ab26019',1,'VRefIntegratorParams::eta()'],['../struct_integrator_params.html#ae4f402913d5fc5dd3aebca242ab26019',1,'IntegratorParams::eta()']]],
  ['eulerconstraint',['EulerConstraint',['../class_euler_constraint.html',1,'EulerConstraint'],['../class_euler_constraint.html#a1cd791b01d3e8f1792cdbd28e4a97e0c',1,'EulerConstraint::EulerConstraint()']]],
  ['eval',['eval',['../struct_drake_1_1_function_traits.html#a640bc01e10d80faf7a308520dc01f0ef',1,'Drake::FunctionTraits::eval()'],['../struct_drake_1_1_function_traits_3_01std_1_1reference__wrapper_3_01_f_01_4_01_4.html#a217002830e1d9cd5c56883c86d9f2032',1,'Drake::FunctionTraits&lt; std::reference_wrapper&lt; F &gt; &gt;::eval()'],['../struct_drake_1_1_function_traits_3_01std_1_1shared__ptr_3_01_f_01_4_01_4.html#a914d280a7e8182e45b4b036df21c3e3a',1,'Drake::FunctionTraits&lt; std::shared_ptr&lt; F &gt; &gt;::eval()'],['../struct_drake_1_1_function_traits_3_01std_1_1unique__ptr_3_01_f_01_4_01_4.html#a33c99dc3b259a632a95babf00aeccbe7',1,'Drake::FunctionTraits&lt; std::unique_ptr&lt; F &gt; &gt;::eval()'],['../struct_drake_1_1internal_1_1_total_size_at_compile_time.html#a5ab48bd49eff128b6a45bd1e63db4824',1,'Drake::internal::TotalSizeAtCompileTime::eval()'],['../struct_drake_1_1internal_1_1_total_size_at_compile_time_3_01_head_01_4.html#a5ab48bd49eff128b6a45bd1e63db4824',1,'Drake::internal::TotalSizeAtCompileTime&lt; Head &gt;::eval()'],['../struct_drake_1_1internal_1_1_size_dispatch.html#aea06aba4744fb839844167104aa3ff9e',1,'Drake::internal::SizeDispatch::eval()'],['../struct_drake_1_1internal_1_1_size_dispatch_3_01_vec_type_00_01_01_01_01_01_01_01_01_01_01_01_01_2055b7989b75af4c872ecbbf5c7d9098.html#aea06aba4744fb839844167104aa3ff9e',1,'Drake::internal::SizeDispatch&lt; VecType,                                                                                                                                           typename std::enable_if&lt; VecType::RowsAtCompileTime==                                                                                                                                                                                                                                                                                                                                           Eigen::Dynamic &gt;::type &gt;::eval()'],['../classdrake_1_1solvers_1_1_constraint.html#a5601b0e0cd735f55ce52d2b9e37af63f',1,'drake::solvers::Constraint::eval(const Eigen::Ref&lt; const Eigen::VectorXd &gt; &amp;x, Eigen::VectorXd &amp;y) const  =0'],['../classdrake_1_1solvers_1_1_constraint.html#a44e1ee0d94316ea6e718da0be2d46910',1,'drake::solvers::Constraint::eval(const Eigen::Ref&lt; const Drake::TaylorVecXd &gt; &amp;x, Drake::TaylorVecXd &amp;y) const  =0'],['../classdrake_1_1solvers_1_1_quadratic_constraint.html#a74c8b1da2b59c19ebff0bfafd84fea57',1,'drake::solvers::QuadraticConstraint::eval(const Eigen::Ref&lt; const Eigen::VectorXd &gt; &amp;x, Eigen::VectorXd &amp;y) const  override'],['../classdrake_1_1solvers_1_1_quadratic_constraint.html#a36649fd422ef322c0bcaaaac5f702d8c',1,'drake::solvers::QuadraticConstraint::eval(const Eigen::Ref&lt; const Drake::TaylorVecXd &gt; &amp;x, Drake::TaylorVecXd &amp;y) const  override'],['../classdrake_1_1solvers_1_1_polynomial_constraint.html#a74c8b1da2b59c19ebff0bfafd84fea57',1,'drake::solvers::PolynomialConstraint::eval(const Eigen::Ref&lt; const Eigen::VectorXd &gt; &amp;x, Eigen::VectorXd &amp;y) const  override'],['../classdrake_1_1solvers_1_1_polynomial_constraint.html#a36649fd422ef322c0bcaaaac5f702d8c',1,'drake::solvers::PolynomialConstraint::eval(const Eigen::Ref&lt; const Drake::TaylorVecXd &gt; &amp;x, Drake::TaylorVecXd &amp;y) const  override'],['../classdrake_1_1solvers_1_1_linear_constraint.html#a74c8b1da2b59c19ebff0bfafd84fea57',1,'drake::solvers::LinearConstraint::eval(const Eigen::Ref&lt; const Eigen::VectorXd &gt; &amp;x, Eigen::VectorXd &amp;y) const  override'],['../classdrake_1_1solvers_1_1_linear_constraint.html#a36649fd422ef322c0bcaaaac5f702d8c',1,'drake::solvers::LinearConstraint::eval(const Eigen::Ref&lt; const Drake::TaylorVecXd &gt; &amp;x, Drake::TaylorVecXd &amp;y) const  override'],['../classdrake_1_1solvers_1_1_bounding_box_constraint.html#a74c8b1da2b59c19ebff0bfafd84fea57',1,'drake::solvers::BoundingBoxConstraint::eval(const Eigen::Ref&lt; const Eigen::VectorXd &gt; &amp;x, Eigen::VectorXd &amp;y) const  override'],['../classdrake_1_1solvers_1_1_bounding_box_constraint.html#a36649fd422ef322c0bcaaaac5f702d8c',1,'drake::solvers::BoundingBoxConstraint::eval(const Eigen::Ref&lt; const Drake::TaylorVecXd &gt; &amp;x, Drake::TaylorVecXd &amp;y) const  override'],['../classdrake_1_1solvers_1_1_linear_complementarity_constraint.html#a74c8b1da2b59c19ebff0bfafd84fea57',1,'drake::solvers::LinearComplementarityConstraint::eval(const Eigen::Ref&lt; const Eigen::VectorXd &gt; &amp;x, Eigen::VectorXd &amp;y) const  override'],['../classdrake_1_1solvers_1_1_linear_complementarity_constraint.html#a36649fd422ef322c0bcaaaac5f702d8c',1,'drake::solvers::LinearComplementarityConstraint::eval(const Eigen::Ref&lt; const Drake::TaylorVecXd &gt; &amp;x, Drake::TaylorVecXd &amp;y) const  override'],['../classdrake_1_1systems_1_1_dynamic_constraint.html#a74c8b1da2b59c19ebff0bfafd84fea57',1,'drake::systems::DynamicConstraint::eval(const Eigen::Ref&lt; const Eigen::VectorXd &gt; &amp;x, Eigen::VectorXd &amp;y) const  override'],['../classdrake_1_1systems_1_1_dynamic_constraint.html#a36649fd422ef322c0bcaaaac5f702d8c',1,'drake::systems::DynamicConstraint::eval(const Eigen::Ref&lt; const Drake::TaylorVecXd &gt; &amp;x, Drake::TaylorVecXd &amp;y) const  override'],['../class_quasi_static_constraint.html#a40b32b84b9058ef3089cc9dbd6a3a159',1,'QuasiStaticConstraint::eval()'],['../class_multiple_time_linear_posture_constraint.html#a6f7ee6c72e682ca492fcce5aa7411f62',1,'MultipleTimeLinearPostureConstraint::eval()'],['../class_single_time_linear_posture_constraint.html#a88b1dd08095268a46a806219b1fb9497',1,'SingleTimeLinearPostureConstraint::eval()'],['../class_single_time_kinematic_constraint.html#ae9ae392a0776137ca7cc52c0983bc3de',1,'SingleTimeKinematicConstraint::eval()'],['../class_multiple_time_kinematic_constraint.html#a7f8e1ac7e7b4b5eda253b883cbdd79be',1,'MultipleTimeKinematicConstraint::eval()'],['../class_position_constraint.html#abd1a66eff6450d1ad293ee3fff82e77c',1,'PositionConstraint::eval()'],['../class_quat_constraint.html#abd1a66eff6450d1ad293ee3fff82e77c',1,'QuatConstraint::eval()'],['../class_euler_constraint.html#abd1a66eff6450d1ad293ee3fff82e77c',1,'EulerConstraint::eval()'],['../class_gaze_orient_constraint.html#abd1a66eff6450d1ad293ee3fff82e77c',1,'GazeOrientConstraint::eval()'],['../class_world_gaze_dir_constraint.html#abd1a66eff6450d1ad293ee3fff82e77c',1,'WorldGazeDirConstraint::eval()'],['../class_world_gaze_target_constraint.html#abd1a66eff6450d1ad293ee3fff82e77c',1,'WorldGazeTargetConstraint::eval()'],['../class_relative_gaze_target_constraint.html#abd1a66eff6450d1ad293ee3fff82e77c',1,'RelativeGazeTargetConstraint::eval()'],['../class_relative_gaze_dir_constraint.html#abd1a66eff6450d1ad293ee3fff82e77c',1,'RelativeGazeDirConstraint::eval()'],['../class_point2_point_distance_constraint.html#abd1a66eff6450d1ad293ee3fff82e77c',1,'Point2PointDistanceConstraint::eval()'],['../class_point2_line_seg_dist_constraint.html#abd1a66eff6450d1ad293ee3fff82e77c',1,'Point2LineSegDistConstraint::eval()'],['../class_all_bodies_closest_distance_constraint.html#abd1a66eff6450d1ad293ee3fff82e77c',1,'AllBodiesClosestDistanceConstraint::eval()'],['../class_min_distance_constraint.html#abd1a66eff6450d1ad293ee3fff82e77c',1,'MinDistanceConstraint::eval()'],['../class_gravity_compensation_torque_constraint.html#abd1a66eff6450d1ad293ee3fff82e77c',1,'GravityCompensationTorqueConstraint::eval()'],['../class_drake_1_1systems_1_1plants_1_1_single_time_kinematic_constraint_wrapper.html#a9dd6341c8a39b67a6760c4b9f4fb5336',1,'Drake::systems::plants::SingleTimeKinematicConstraintWrapper::eval(const Eigen::Ref&lt; const Eigen::VectorXd &gt; &amp;q, Eigen::VectorXd &amp;y) const  override'],['../class_drake_1_1systems_1_1plants_1_1_single_time_kinematic_constraint_wrapper.html#a209e07f66654aaabcfe64d55be62efeb',1,'Drake::systems::plants::SingleTimeKinematicConstraintWrapper::eval(const Eigen::Ref&lt; const TaylorVecXd &gt; &amp;tq, TaylorVecXd &amp;ty) const  override'],['../class_drake_1_1systems_1_1plants_1_1_quasi_static_constraint_wrapper.html#a9dd6341c8a39b67a6760c4b9f4fb5336',1,'Drake::systems::plants::QuasiStaticConstraintWrapper::eval(const Eigen::Ref&lt; const Eigen::VectorXd &gt; &amp;q, Eigen::VectorXd &amp;y) const  override'],['../class_drake_1_1systems_1_1plants_1_1_quasi_static_constraint_wrapper.html#a209e07f66654aaabcfe64d55be62efeb',1,'Drake::systems::plants::QuasiStaticConstraintWrapper::eval(const Eigen::Ref&lt; const TaylorVecXd &gt; &amp;tq, TaylorVecXd &amp;ty) const  override'],['../struct_drake_1_1internal_1_1_num_states_dispatch.html#a2103a04cdd9c2bbd5571d6b9eaf47461',1,'Drake::internal::NumStatesDispatch::eval()'],['../struct_drake_1_1internal_1_1_num_states_dispatch_3_01_system_00_01true_01_4.html#a2103a04cdd9c2bbd5571d6b9eaf47461',1,'Drake::internal::NumStatesDispatch&lt; System, true &gt;::eval()'],['../struct_drake_1_1internal_1_1_num_inputs_dispatch.html#a2103a04cdd9c2bbd5571d6b9eaf47461',1,'Drake::internal::NumInputsDispatch::eval()'],['../struct_drake_1_1internal_1_1_num_inputs_dispatch_3_01_system_00_01true_01_4.html#a2103a04cdd9c2bbd5571d6b9eaf47461',1,'Drake::internal::NumInputsDispatch&lt; System, true &gt;::eval()'],['../struct_drake_1_1internal_1_1_num_outputs_dispatch.html#a2103a04cdd9c2bbd5571d6b9eaf47461',1,'Drake::internal::NumOutputsDispatch::eval()'],['../struct_drake_1_1internal_1_1_num_outputs_dispatch_3_01_system_00_01true_01_4.html#a2103a04cdd9c2bbd5571d6b9eaf47461',1,'Drake::internal::NumOutputsDispatch&lt; System, true &gt;::eval()'],['../struct_drake_1_1internal_1_1_create_state_vector_dispatch.html#a5d02a89cecc9e4e640909e88bd9a81cf',1,'Drake::internal::CreateStateVectorDispatch::eval()'],['../struct_drake_1_1internal_1_1_create_state_vector_dispatch_3_01_01_01_01_01_01_01_01_01_01_01_01_d1722d439d0ae743e81dca7628c0b626.html#a5d02a89cecc9e4e640909e88bd9a81cf',1,'Drake::internal::CreateStateVectorDispatch&lt;                  System, Scalar,           typename std::enable_if&lt; is_eigen_vector&lt;                                                  typename System::template StateVector&lt; Scalar &gt; &gt;::value &gt;::type &gt;::eval()'],['../struct_drake_1_1internal_1_1_create_state_vector_dispatch_3_01_01_01_01_01_01_01_01_01_01_01_01_a49b0ab32e2e5b1d747f952eac5b1374.html#a5d02a89cecc9e4e640909e88bd9a81cf',1,'Drake::internal::CreateStateVectorDispatch&lt;                  System, Scalar,           typename std::enable_if&lt; is_combined_vector&lt;                                                  typename System::template StateVector&lt; Scalar &gt; &gt;::value &gt;::type &gt;::eval()']]],
  ['eval_5fvalid',['eval_valid',['../class_multiple_time_kinematic_constraint.html#aeefb57b3fd1309b1f590741ca6bb500e',1,'MultipleTimeKinematicConstraint::eval_valid()'],['../class_world_fixed_position_constraint.html#af36a897174660b6105f4c03056f90051',1,'WorldFixedPositionConstraint::eval_valid()'],['../class_world_fixed_orient_constraint.html#af36a897174660b6105f4c03056f90051',1,'WorldFixedOrientConstraint::eval_valid()'],['../class_world_fixed_body_pose_constraint.html#af36a897174660b6105f4c03056f90051',1,'WorldFixedBodyPoseConstraint::eval_valid()']]],
  ['evalconservativepower',['EvalConservativePower',['../classdrake_1_1systems_1_1_continuous_system_interface.html#a42ea3fefab9e4f5f6d6225ba51781118',1,'drake::systems::ContinuousSystemInterface::EvalConservativePower()'],['../classdrake_1_1systems_1_1_system3.html#a8ee640d5183d5e1493e017b84edf10a6',1,'drake::systems::System3::EvalConservativePower()']]],
  ['evalinputport',['EvalInputPort',['../classdrake_1_1systems_1_1_abstract_system3.html#ab6954534b77235f1a390443c9e29f9b5',1,'drake::systems::AbstractSystem3']]],
  ['evalkineticenergy',['EvalKineticEnergy',['../classdrake_1_1systems_1_1_system3.html#ad1d8775eb6b1f2a62f868037fa4ca816',1,'drake::systems::System3::EvalKineticEnergy()'],['../classdrake_1_1systems_1_1_system_interface.html#a2d1b069c3788ed45313c120cbd7ef12d',1,'drake::systems::SystemInterface::EvalKineticEnergy()']]],
  ['evalnames',['evalNames',['../class_position_constraint.html#ae31f23e53d44a63bb572db9d10584994',1,'PositionConstraint::evalNames()'],['../class_world_position_constraint.html#a2e982455c00ae4b1ead8a88af11abacd',1,'WorldPositionConstraint::evalNames()'],['../class_world_co_m_constraint.html#a2e982455c00ae4b1ead8a88af11abacd',1,'WorldCoMConstraint::evalNames()'],['../class_relative_position_constraint.html#a2e982455c00ae4b1ead8a88af11abacd',1,'RelativePositionConstraint::evalNames()'],['../class_world_position_in_frame_constraint.html#a2e982455c00ae4b1ead8a88af11abacd',1,'WorldPositionInFrameConstraint::evalNames()']]],
  ['evalnonconservativepower',['EvalNonConservativePower',['../classdrake_1_1systems_1_1_continuous_system_interface.html#aa6833be1a4581a6a9b7e3daca0e07246',1,'drake::systems::ContinuousSystemInterface::EvalNonConservativePower()'],['../classdrake_1_1systems_1_1_system3.html#a5916f933198e365db85dbfafc3d0fb4f',1,'drake::systems::System3::EvalNonConservativePower()']]],
  ['evalorientation',['evalOrientation',['../class_gaze_orient_constraint.html#a5ed0efd7209cc85fc21dc3e4482682c5',1,'GazeOrientConstraint::evalOrientation()'],['../class_world_gaze_orient_constraint.html#ac5d3a7512066c0e3802fd4815cc9c481',1,'WorldGazeOrientConstraint::evalOrientation()']]],
  ['evalorientationproduct',['evalOrientationProduct',['../class_quat_constraint.html#ab7225a2e2db16c3bbf67a61622cd9f34',1,'QuatConstraint::evalOrientationProduct()'],['../class_world_quat_constraint.html#a2714c9aef212f89987907615f197dd9f',1,'WorldQuatConstraint::evalOrientationProduct()'],['../class_relative_quat_constraint.html#a2714c9aef212f89987907615f197dd9f',1,'RelativeQuatConstraint::evalOrientationProduct()']]],
  ['evaloutput',['EvalOutput',['../classdrake_1_1systems_1_1_adder.html#a6e026f6342357917fe82b64b94f10113',1,'drake::systems::Adder::EvalOutput()'],['../classdrake_1_1systems_1_1_system_interface.html#adef14eece0fad710ea33cf431332d89e',1,'drake::systems::SystemInterface::EvalOutput()']]],
  ['evaloutputport',['EvalOutputPort',['../classdrake_1_1systems_1_1_abstract_system3.html#a3b7ad32ff58b6647d0207a7d4b0e01ab',1,'drake::systems::AbstractSystem3']]],
  ['evalpositions',['evalPositions',['../class_position_constraint.html#a8fdb80866fdab5afc6df11f6c79a995a',1,'PositionConstraint::evalPositions()'],['../class_world_position_constraint.html#a9ee9f8ba2fd8ab2d04121eb9c02fbf05',1,'WorldPositionConstraint::evalPositions()'],['../class_world_co_m_constraint.html#a9ee9f8ba2fd8ab2d04121eb9c02fbf05',1,'WorldCoMConstraint::evalPositions()'],['../class_relative_position_constraint.html#a9ee9f8ba2fd8ab2d04121eb9c02fbf05',1,'RelativePositionConstraint::evalPositions()'],['../class_world_position_in_frame_constraint.html#a9ee9f8ba2fd8ab2d04121eb9c02fbf05',1,'WorldPositionInFrameConstraint::evalPositions()']]],
  ['evalpotentialenergy',['EvalPotentialEnergy',['../classdrake_1_1systems_1_1_system3.html#a90774c7191347c1c657660177bcc538d',1,'drake::systems::System3::EvalPotentialEnergy()'],['../classdrake_1_1systems_1_1_system_interface.html#ac51b0446f51fa85b9b394c2a10eaf1a9',1,'drake::systems::SystemInterface::EvalPotentialEnergy()']]],
  ['evalrpy',['evalrpy',['../class_euler_constraint.html#a7af5be0cba1660d9f20ce5c9775df920',1,'EulerConstraint::evalrpy()'],['../class_world_euler_constraint.html#a191ce7f59f913e3d03e2b34ab367ed5a',1,'WorldEulerConstraint::evalrpy()']]],
  ['evaltimederivatives',['EvalTimeDerivatives',['../classdrake_1_1systems_1_1_continuous_system_interface.html#ac3ee6138ed55a9104d03a06cf4c941db',1,'drake::systems::ContinuousSystemInterface::EvalTimeDerivatives()'],['../classdrake_1_1systems_1_1_system3.html#a3ec6c16439f9ab01a992bf4935eff038',1,'drake::systems::System3::EvalTimeDerivatives()']]],
  ['evaluatemultivariate',['evaluateMultivariate',['../class_polynomial.html#a36de9f8eb60c391abc49fea4def70552',1,'Polynomial::evaluateMultivariate(const std::map&lt; VarType, T &gt; &amp;var_values) const '],['../class_polynomial.html#aa8d75e233c2cdc6e09deaa44ebb129c4',1,'Polynomial::evaluateMultivariate(const std::map&lt; VarType, Drake::TaylorVarXd &gt; &amp;var_values) const '],['../class_trig_poly.html#a36de9f8eb60c391abc49fea4def70552',1,'TrigPoly::evaluateMultivariate()']]],
  ['evaluatepartial',['evaluatePartial',['../class_polynomial.html#a499b1ccc98e1c0372c5c6f2070147520',1,'Polynomial::evaluatePartial()'],['../class_trig_poly.html#ae4aea2b9dd04ab0f0e84df9fed362a77',1,'TrigPoly::evaluatePartial()']]],
  ['evaluateunivariate',['evaluateUnivariate',['../class_polynomial.html#a0a81af7a41325ab48507aa64691fb4b7',1,'Polynomial']]],
  ['evaluatexyzexpmapcubicspline',['evaluateXYZExpmapCubicSpline',['../control_util_8cpp.html#a5aadc5075cb9e0bdc4a6f9d4132375ef',1,'evaluateXYZExpmapCubicSpline(double t, const PiecewisePolynomial&lt; double &gt; &amp;spline, Isometry3d &amp;body_pose_des, Vector6d &amp;xyzdot_angular_vel, Vector6d &amp;xyzddot_angular_accel):&#160;controlUtil.cpp'],['../control_util_8h.html#a853fc67aaece9241ab5f4ab512a8e8f9',1,'evaluateXYZExpmapCubicSpline(double t, const PiecewisePolynomial&lt; double &gt; &amp;spline, Eigen::Isometry3d &amp;body_pose_des, Vector6d &amp;xyzdot_angular_vel, Vector6d &amp;xyzddot_angular_accel):&#160;controlUtil.h']]],
  ['evalvectorinputport',['EvalVectorInputPort',['../classdrake_1_1systems_1_1_system3.html#a818e07d0cfc182417df1440661b3dd27',1,'drake::systems::System3']]],
  ['evalvectoroutputport',['EvalVectorOutputPort',['../classdrake_1_1systems_1_1_system3.html#a04c30846bdc565c6bc8af4e28b4c3464',1,'drake::systems::System3']]],
  ['execution',['execution',['../structmeasure.html#a9451f7b5181a25bdb6cc52a2b32e7800',1,'measure']]],
  ['exp',['exp',['../classdrake_1_1_functional_form.html#a868652dfcd9b27da008a82611f6a29e4',1,'drake::FunctionalForm::exp()'],['../namespacedrake.html#a4d9daa23e20328990764f5908fe26e59',1,'drake::exp()']]],
  ['expanddefaults',['expandDefaults',['../yaml_util_8cpp.html#a7909bbd9f3a55b4f055c160ce61de8d5',1,'expandDefaults(const YAML::Node &amp;node):&#160;yamlUtil.cpp'],['../yaml_util_8h.html#a7909bbd9f3a55b4f055c160ce61de8d5',1,'expandDefaults(const YAML::Node &amp;node):&#160;yamlUtil.cpp']]],
  ['expmap_2ecc',['expmap.cc',['../expmap_8cc.html',1,'']]],
  ['expmap_2eh',['expmap.h',['../expmap_8h.html',1,'']]],
  ['expmap2quat',['expmap2quat',['../namespacedrake_1_1math.html#a4bc8c0d47e42141e066c524543c5dd92',1,'drake::math']]],
  ['expmap2quatdegenerate',['expmap2quatDegenerate',['../namespacedrake_1_1math_1_1internal.html#a01dad140d10cda5a14ee7a51a532081c',1,'drake::math::internal']]],
  ['expmap2quatimplmex_2ecpp',['expmap2quatImplmex.cpp',['../expmap2quat_implmex_8cpp.html',1,'']]],
  ['expmap2quatnondegenerate',['expmap2quatNonDegenerate',['../namespacedrake_1_1math_1_1internal.html#af04b4d15cac27d0880fe4ca074efe050',1,'drake::math::internal']]],
  ['expmap2quatwithgradient',['expmap2quatWithGradient',['../expmap2quat_implmex_8cpp.html#a15d5f9069478259e0cda6de06a009c48',1,'expmap2quatImplmex.cpp']]],
  ['expmap2quatwithsecondderiv',['expmap2quatWithSecondDeriv',['../expmap2quat_implmex_8cpp.html#a5226aa228100a40ff1add1776e1967e6',1,'expmap2quatImplmex.cpp']]],
  ['expmap_5ftest_2ecc',['expmap_test.cc',['../expmap__test_8cc.html',1,'']]],
  ['exponential_5fmap_5fdamping_5fratio_5fmultiplier',['exponential_map_damping_ratio_multiplier',['../class_body_motion_data.html#a04227bcf4743e22b940ee56433f81025',1,'BodyMotionData']]],
  ['exponential_5fmap_5fproportional_5fgain_5fmultiplier',['exponential_map_proportional_gain_multiplier',['../class_body_motion_data.html#a24d3b6d9c1edfc7e39535ce83ba26f58',1,'BodyMotionData']]],
  ['exponentialpluspiecewisepolynomial',['ExponentialPlusPiecewisePolynomial',['../class_exponential_plus_piecewise_polynomial.html',1,'ExponentialPlusPiecewisePolynomial&lt; CoefficientType &gt;'],['../class_exponential_plus_piecewise_polynomial.html#a32f3858874c31d088604888143889b05',1,'ExponentialPlusPiecewisePolynomial::ExponentialPlusPiecewisePolynomial()'],['../class_exponential_plus_piecewise_polynomial.html#aa8a02a4ac1c9e38765609ff59cea9af3',1,'ExponentialPlusPiecewisePolynomial::ExponentialPlusPiecewisePolynomial(const Eigen::MatrixBase&lt; DerivedK &gt; &amp;K, const Eigen::MatrixBase&lt; DerivedA &gt; &amp;A, const Eigen::MatrixBase&lt; DerivedAlpha &gt; &amp;alpha, const PiecewisePolynomial&lt; CoefficientType &gt; &amp;piecewise_polynomial_part)'],['../class_exponential_plus_piecewise_polynomial.html#a58428bb734fc12fd2cab00c6c08d70ea',1,'ExponentialPlusPiecewisePolynomial::ExponentialPlusPiecewisePolynomial(const PiecewisePolynomial&lt; CoefficientType &gt; &amp;piecewise_polynomial_part)']]],
  ['exponentialpluspiecewisepolynomial_2ecpp',['ExponentialPlusPiecewisePolynomial.cpp',['../_exponential_plus_piecewise_polynomial_8cpp.html',1,'']]],
  ['exponentialpluspiecewisepolynomial_2eh',['ExponentialPlusPiecewisePolynomial.h',['../_exponential_plus_piecewise_polynomial_8h.html',1,'']]],
  ['exponentialpluspiecewisepolynomial_3c_20double_20_3e',['ExponentialPlusPiecewisePolynomial&lt; double &gt;',['../class_exponential_plus_piecewise_polynomial.html',1,'ExponentialPlusPiecewisePolynomial&lt; double &gt;'],['../_exponential_plus_piecewise_polynomial_8cpp.html#ab492b7dbc1cb21e89c74ef78620febb8',1,'ExponentialPlusPiecewisePolynomial&lt; double &gt;():&#160;ExponentialPlusPiecewisePolynomial.cpp']]],
  ['exppluspptrajectoryevalmex_2ecpp',['ExpPlusPPTrajectoryEvalmex.cpp',['../_exp_plus_p_p_trajectory_evalmex_8cpp.html',1,'']]],
  ['extractmeshvertices',['extractMeshVertices',['../class_drake_shapes_1_1_mesh.html#a3e96e4185fb29da60576672794996dbc',1,'DrakeShapes::Mesh']]]
];
